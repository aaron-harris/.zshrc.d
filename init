#!/bin/zsh

## Set up the current user's .zshrc to include all scripts under ~/.zshrc.d.
#
# Only files with .sh or .zsh extensions will be sourced.  Notice that this file
# itself does not have any extension, so it won't be included if this project is
# cloned under ~/.zshrc.d (the expected organizational structure).
#
# File discovery is recursive, so sub-directories may be used for organization.
#
# Moreover, symlinks will be traversed.  This allows individual projects to
# register useful shell functions and aliases by symlinking a scripts directory
# into this directory (assumed by convention to be ~/.zshrc.d).  One additional
# benefit of this approach is that the implementation of such scripts will
# automatically track any changes.

# Note that the implementation intentionally avoids using some common regex
# operators (in particular, '|', '+', and '?'), because the 'find' command
# differs between operating systems both in its default regex dialect (GNU
# Emacs for Ubuntu/WSL and BRE for Mac) and in the syntax used to switch
# dialects, and this init script should be portable across operating systems.
# See https://www.greenend.org.uk/rjk/tech/regexp.html for an explanation of
# the differences between regex dialects.

cat <<- 'EOF' > ~/.zshrc

	# Source all .sh and .zsh files within .zshrc.d; see ~/.zshrc.d/init.
	for FILE in $(find -L ~/.zshrc.d \
	    -regex '^.*/..*[.]zsh$' \
	    -or -regex '^.*/..*[.]zsh$')
	  do source $FILE
	done
EOF
